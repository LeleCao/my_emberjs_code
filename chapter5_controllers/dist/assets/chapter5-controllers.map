{"version":3,"sources":["vendor/ember-cli/app-prefix.js","chapter5-controllers/adapters/application.js","chapter5-controllers/app.js","chapter5-controllers/components/app-version.js","chapter5-controllers/controllers/array.js","chapter5-controllers/controllers/blog-post.js","chapter5-controllers/controllers/comments.js","chapter5-controllers/controllers/managing-dependencies-route.js","chapter5-controllers/controllers/object.js","chapter5-controllers/controllers/post.js","chapter5-controllers/initializers/app-version.js","chapter5-controllers/initializers/export-application-global.js","chapter5-controllers/models/blog-post.js","chapter5-controllers/models/post.js","chapter5-controllers/router.js","chapter5-controllers/routes/blog-post.js","chapter5-controllers/routes/post/comments.js","chapter5-controllers/routes/post.js","chapter5-controllers/templates/application.js","chapter5-controllers/templates/blog-post.js","chapter5-controllers/templates/post/comments.js","chapter5-controllers/templates/post.js","chapter5-controllers/tests/adapters/application.jshint.js","chapter5-controllers/tests/app.jshint.js","chapter5-controllers/tests/controllers/blog-post.jshint.js","chapter5-controllers/tests/controllers/comments.jshint.js","chapter5-controllers/tests/controllers/managing-dependencies-route.jshint.js","chapter5-controllers/tests/controllers/post.jshint.js","chapter5-controllers/tests/helpers/resolver.js","chapter5-controllers/tests/helpers/resolver.jshint.js","chapter5-controllers/tests/helpers/start-app.js","chapter5-controllers/tests/helpers/start-app.jshint.js","chapter5-controllers/tests/models/blog-post.jshint.js","chapter5-controllers/tests/models/post.jshint.js","chapter5-controllers/tests/router.jshint.js","chapter5-controllers/tests/routes/blog-post.jshint.js","chapter5-controllers/tests/routes/post/comments.jshint.js","chapter5-controllers/tests/routes/post.jshint.js","chapter5-controllers/tests/test-helper.js","chapter5-controllers/tests/test-helper.jshint.js","chapter5-controllers/tests/unit/adapters/application-test.js","chapter5-controllers/tests/unit/adapters/application-test.jshint.js","chapter5-controllers/tests/unit/controllers/blog-post-test.js","chapter5-controllers/tests/unit/controllers/blog-post-test.jshint.js","chapter5-controllers/tests/unit/controllers/comments-test.js","chapter5-controllers/tests/unit/controllers/comments-test.jshint.js","chapter5-controllers/tests/unit/controllers/managing-dependencies-route-test.js","chapter5-controllers/tests/unit/controllers/managing-dependencies-route-test.jshint.js","chapter5-controllers/tests/unit/controllers/post-test.js","chapter5-controllers/tests/unit/controllers/post-test.jshint.js","chapter5-controllers/tests/unit/models/blog-post-test.js","chapter5-controllers/tests/unit/models/blog-post-test.jshint.js","chapter5-controllers/tests/unit/models/post-test.js","chapter5-controllers/tests/unit/models/post-test.jshint.js","chapter5-controllers/tests/unit/routes/blog-post-test.js","chapter5-controllers/tests/unit/routes/blog-post-test.jshint.js","chapter5-controllers/tests/unit/routes/post/comments-test.js","chapter5-controllers/tests/unit/routes/post/comments-test.jshint.js","chapter5-controllers/tests/unit/routes/post-test.js","chapter5-controllers/tests/unit/routes/post-test.jshint.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["\"use strict\";\n/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('chapter5-controllers/adapters/application', ['exports', 'ember-data'], function (exports, DS) {\n\n\t'use strict';\n\n\texports['default'] = DS['default'].RESTAdapter.extend({});\n\n});","define('chapter5-controllers/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'chapter5-controllers/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  var App;\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('chapter5-controllers/components/app-version', ['exports', 'ember-cli-app-version/components/app-version', 'chapter5-controllers/config/environment'], function (exports, AppVersionComponent, config) {\n\n  'use strict';\n\n  var _config$APP = config['default'].APP;\n  var name = _config$APP.name;\n  var version = _config$APP.version;\n\n  exports['default'] = AppVersionComponent['default'].extend({\n    version: version,\n    name: name\n  });\n\n});","define('chapter5-controllers/controllers/array', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller;\n\n});","define('chapter5-controllers/controllers/blog-post', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\t//  app/controllers/blog-post.js\n\n\texports['default'] = Ember['default'].Controller.extend({});\n\n});","define('chapter5-controllers/controllers/comments', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\t//  app/controllers/comments.js\n\n\texports['default'] = Ember['default'].Controller.extend({\n\t\tpostController: Ember['default'].inject.controller('post'),\n\t\tpost: Ember['default'].computed.reads('postController.model')\n\t});\n\n});","define('chapter5-controllers/controllers/managing-dependencies-route', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller.extend({});\n\n});","define('chapter5-controllers/controllers/object', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller;\n\n});","define('chapter5-controllers/controllers/post', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller.extend({});\n\n});","define('chapter5-controllers/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'chapter5-controllers/config/environment'], function (exports, initializerFactory, config) {\n\n  'use strict';\n\n  var _config$APP = config['default'].APP;\n  var name = _config$APP.name;\n  var version = _config$APP.version;\n\n  exports['default'] = {\n    name: 'App Version',\n    initialize: initializerFactory['default'](name, version)\n  };\n\n});","define('chapter5-controllers/initializers/export-application-global', ['exports', 'ember', 'chapter5-controllers/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (config['default'].exportApplicationGlobal !== false) {\n      var value = config['default'].exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = Ember['default'].String.classify(config['default'].modulePrefix);\n      }\n\n      if (!window[globalName]) {\n        window[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete window[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n\n});","define('chapter5-controllers/models/blog-post', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  //  app/models/blog-post.js\n\n  exports['default'] = DS['default'].Model.extend({\n    title: DS['default'].attr('string'), //  属性默认为string类型，可以不指定\n    intro: DS['default'].attr('string'),\n    body: DS['default'].attr('string'),\n    author: DS['default'].attr('string')\n  });\n\n});","define('chapter5-controllers/models/post', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    title: DS['default'].attr('string'), //  属性默认为string类型，可以不指定\n    intro: DS['default'].attr('string'),\n    body: DS['default'].attr('string'),\n    author: DS['default'].attr('string')\n  });\n\n});","define('chapter5-controllers/router', ['exports', 'ember', 'chapter5-controllers/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  //  router.js\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType\n  });\n\n  Router.map(function () {\n    this.route('blog-post');\n    this.route('post', { path: '/posts/:post_id' }, function () {\n      this.route('comments');\n    });\n  });\n\n  exports['default'] = Router;\n\n});","define('chapter5-controllers/routes/blog-post', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\t//  app/routes/blog-post.js\n\n\texports['default'] = Ember['default'].Route.extend({\n\t\tmodel: function model() {\n\t\t\tvar blogPost = this.store.createRecord('blog-post', {\n\t\t\t\ttitle: 'DEFINING A COMPONENT', //  属性默认为string类型，可以不指定\n\t\t\t\tintro: \"Components must have at least one dash in their name. \",\n\t\t\t\tbody: \"Components must have at least one dash in their name. So blog-post is an acceptable name, and so is audio-player-controls, but post is not. This prevents clashes with current or future HTML element names, aligns Ember components with the W3C Custom Elements spec, and ensures Ember detects the components automatically.\",\n\t\t\t\tauthor: 'ubuntuvim'\n\t\t\t});\n\t\t\t// 直接返回一个model，或者你可以返回promises，\n\t\t\treturn blogPost;\n\t\t}\n\t});\n\n});","define('chapter5-controllers/routes/post/comments', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('chapter5-controllers/routes/post', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('chapter5-controllers/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 4,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"chapter5-controllers/templates/application.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        dom.setAttribute(el1,\"id\",\"title\");\n        var el2 = dom.createTextNode(\"Welcome to Ember\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment,2,2,contextualElement);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"outlet\",[\"loc\",[null,[3,0],[3,10]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('chapter5-controllers/templates/blog-post', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 11,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 16,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"chapter5-controllers/templates/blog-post.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\t\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"button\");\n          var el2 = dom.createTextNode(\"hide body\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\t\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"body\");\n          var el2 = dom.createTextNode(\"\\n\t\t\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\t\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var element1 = dom.childAt(fragment, [1]);\n          var morphs = new Array(2);\n          morphs[0] = dom.createElementMorph(element1);\n          morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]),1,1);\n          return morphs;\n        },\n        statements: [\n          [\"element\",\"action\",[\"toggleBody\"],[],[\"loc\",[null,[12,9],[12,32]]]],\n          [\"content\",\"model.body\",[\"loc\",[null,[14,2],[14,16]]]]\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 16,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 18,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"chapter5-controllers/templates/blog-post.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\t\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"button\");\n          var el2 = dom.createTextNode(\"Show body\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var element0 = dom.childAt(fragment, [1]);\n          var morphs = new Array(1);\n          morphs[0] = dom.createElementMorph(element0);\n          return morphs;\n        },\n        statements: [\n          [\"element\",\"action\",[\"toggleBody\"],[],[\"loc\",[null,[17,9],[17,32]]]]\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 20,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"chapter5-controllers/templates/blog-post.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"  app/templates/blog-post.hbs  \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h1\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h2\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"intro\");\n        var el2 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(4);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [2]),0,0);\n        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [4]),0,0);\n        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [6]),1,1);\n        morphs[3] = dom.createMorphAt(fragment,10,10,contextualElement);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"model.title\",[\"loc\",[null,[3,4],[3,19]]]],\n        [\"content\",\"model.author\",[\"loc\",[null,[4,4],[4,20]]]],\n        [\"content\",\"model.intro\",[\"loc\",[null,[7,1],[7,16]]]],\n        [\"block\",\"if\",[[\"get\",\"isExpanded\",[\"loc\",[null,[11,6],[11,16]]]]],[],0,1,[\"loc\",[null,[11,0],[18,7]]]]\n      ],\n      locals: [],\n      templates: [child0, child1]\n    };\n  }()));\n\n});","define('chapter5-controllers/templates/post/comments', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 3,\n              \"column\": 1\n            },\n            \"end\": {\n              \"line\": 5,\n              \"column\": 1\n            }\n          },\n          \"moduleName\": \"chapter5-controllers/templates/post/comments.hbs\"\n        },\n        arity: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\t\t\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"li\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n          return morphs;\n        },\n        statements: [\n          [\"content\",\"comment.text\",[\"loc\",[null,[4,6],[4,22]]]]\n        ],\n        locals: [\"comment\"],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 6,\n            \"column\": 5\n          }\n        },\n        \"moduleName\": \"chapter5-controllers/templates/post/comments.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h1\");\n        var el2 = dom.createTextNode(\"Comments for \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"ul\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(2);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);\n        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]),1,1);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"post.title\",[\"loc\",[null,[1,17],[1,31]]]],\n        [\"block\",\"each\",[[\"get\",\"model\",[\"loc\",[null,[3,9],[3,14]]]]],[],0,null,[\"loc\",[null,[3,1],[5,10]]]]\n      ],\n      locals: [],\n      templates: [child0]\n    };\n  }()));\n\n});","define('chapter5-controllers/templates/post', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"chapter5-controllers/templates/post.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"outlet\",[\"loc\",[null,[1,0],[1,10]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('chapter5-controllers/tests/adapters/application.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - adapters');\n  QUnit.test('adapters/application.js should pass jshint', function(assert) { \n    assert.ok(true, 'adapters/application.js should pass jshint.'); \n  });\n\n});","define('chapter5-controllers/tests/app.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('app.js should pass jshint', function(assert) { \n    assert.ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('chapter5-controllers/tests/controllers/blog-post.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/blog-post.js should pass jshint', function(assert) { \n    assert.ok(true, 'controllers/blog-post.js should pass jshint.'); \n  });\n\n});","define('chapter5-controllers/tests/controllers/comments.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/comments.js should pass jshint', function(assert) { \n    assert.ok(true, 'controllers/comments.js should pass jshint.'); \n  });\n\n});","define('chapter5-controllers/tests/controllers/managing-dependencies-route.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/managing-dependencies-route.js should pass jshint', function(assert) { \n    assert.ok(true, 'controllers/managing-dependencies-route.js should pass jshint.'); \n  });\n\n});","define('chapter5-controllers/tests/controllers/post.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/post.js should pass jshint', function(assert) { \n    assert.ok(true, 'controllers/post.js should pass jshint.'); \n  });\n\n});","define('chapter5-controllers/tests/helpers/resolver', ['exports', 'ember/resolver', 'chapter5-controllers/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('chapter5-controllers/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/resolver.js should pass jshint', function(assert) { \n    assert.ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('chapter5-controllers/tests/helpers/start-app', ['exports', 'ember', 'chapter5-controllers/app', 'chapter5-controllers/config/environment'], function (exports, Ember, Application, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('chapter5-controllers/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/start-app.js should pass jshint', function(assert) { \n    assert.ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('chapter5-controllers/tests/models/blog-post.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - models');\n  QUnit.test('models/blog-post.js should pass jshint', function(assert) { \n    assert.ok(true, 'models/blog-post.js should pass jshint.'); \n  });\n\n});","define('chapter5-controllers/tests/models/post.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - models');\n  QUnit.test('models/post.js should pass jshint', function(assert) { \n    assert.ok(true, 'models/post.js should pass jshint.'); \n  });\n\n});","define('chapter5-controllers/tests/router.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('router.js should pass jshint', function(assert) { \n    assert.ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('chapter5-controllers/tests/routes/blog-post.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/blog-post.js should pass jshint', function(assert) { \n    assert.ok(true, 'routes/blog-post.js should pass jshint.'); \n  });\n\n});","define('chapter5-controllers/tests/routes/post/comments.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - routes/post');\n  QUnit.test('routes/post/comments.js should pass jshint', function(assert) { \n    assert.ok(true, 'routes/post/comments.js should pass jshint.'); \n  });\n\n});","define('chapter5-controllers/tests/routes/post.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/post.js should pass jshint', function(assert) { \n    assert.ok(true, 'routes/post.js should pass jshint.'); \n  });\n\n});","define('chapter5-controllers/tests/test-helper', ['chapter5-controllers/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('chapter5-controllers/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('test-helper.js should pass jshint', function(assert) { \n    assert.ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('chapter5-controllers/tests/unit/adapters/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:application', 'Unit | Adapter | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n\n});","define('chapter5-controllers/tests/unit/adapters/application-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/adapters');\n  QUnit.test('unit/adapters/application-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/adapters/application-test.js should pass jshint.'); \n  });\n\n});","define('chapter5-controllers/tests/unit/controllers/blog-post-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:blog-post', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('chapter5-controllers/tests/unit/controllers/blog-post-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers');\n  QUnit.test('unit/controllers/blog-post-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/controllers/blog-post-test.js should pass jshint.'); \n  });\n\n});","define('chapter5-controllers/tests/unit/controllers/comments-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:comments', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('chapter5-controllers/tests/unit/controllers/comments-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers');\n  QUnit.test('unit/controllers/comments-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/controllers/comments-test.js should pass jshint.'); \n  });\n\n});","define('chapter5-controllers/tests/unit/controllers/managing-dependencies-route-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:managing-dependencies-route', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('chapter5-controllers/tests/unit/controllers/managing-dependencies-route-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers');\n  QUnit.test('unit/controllers/managing-dependencies-route-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/controllers/managing-dependencies-route-test.js should pass jshint.'); \n  });\n\n});","define('chapter5-controllers/tests/unit/controllers/post-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:post', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('chapter5-controllers/tests/unit/controllers/post-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers');\n  QUnit.test('unit/controllers/post-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/controllers/post-test.js should pass jshint.'); \n  });\n\n});","define('chapter5-controllers/tests/unit/models/blog-post-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('blog-post', 'Unit | Model | blog post', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('chapter5-controllers/tests/unit/models/blog-post-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/models');\n  QUnit.test('unit/models/blog-post-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/models/blog-post-test.js should pass jshint.'); \n  });\n\n});","define('chapter5-controllers/tests/unit/models/post-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('post', 'Unit | Model | post', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('chapter5-controllers/tests/unit/models/post-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/models');\n  QUnit.test('unit/models/post-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/models/post-test.js should pass jshint.'); \n  });\n\n});","define('chapter5-controllers/tests/unit/routes/blog-post-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:blog-post', 'Unit | Route | blog post', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('chapter5-controllers/tests/unit/routes/blog-post-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes');\n  QUnit.test('unit/routes/blog-post-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/routes/blog-post-test.js should pass jshint.'); \n  });\n\n});","define('chapter5-controllers/tests/unit/routes/post/comments-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:post/comments', 'Unit | Route | post/comments', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('chapter5-controllers/tests/unit/routes/post/comments-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes/post');\n  QUnit.test('unit/routes/post/comments-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/routes/post/comments-test.js should pass jshint.'); \n  });\n\n});","define('chapter5-controllers/tests/unit/routes/post-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:post', 'Unit | Route | post', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('chapter5-controllers/tests/unit/routes/post-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes');\n  QUnit.test('unit/routes/post-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/routes/post-test.js should pass jshint.'); \n  });\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('chapter5-controllers/config/environment', ['ember'], function(Ember) {\n  var prefix = 'chapter5-controllers';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"chapter5-controllers/tests/test-helper\");\n} else {\n  require(\"chapter5-controllers/app\")[\"default\"].create({\"name\":\"chapter5-controllers\",\"version\":\"0.0.0+54b4d90b\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnxpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"chapter5-controllers.js"}