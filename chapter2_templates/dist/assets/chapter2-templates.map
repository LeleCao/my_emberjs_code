{"version":3,"sources":["vendor/ember-cli/app-prefix.js","chapter2-templates/app.js","chapter2-templates/components/app-version.js","chapter2-templates/controllers/application.js","chapter2-templates/controllers/array.js","chapter2-templates/controllers/object.js","chapter2-templates/initializers/app-version.js","chapter2-templates/initializers/export-application-global.js","chapter2-templates/models/handlbars-conditions-exp-model.js","chapter2-templates/router.js","chapter2-templates/routes/application.js","chapter2-templates/routes/handlebars-conditions-exp-route.js","chapter2-templates/routes/test.js","chapter2-templates/templates/application_base.js","chapter2-templates/templates/application.js","chapter2-templates/templates/handlebars-conditions-exp-route.js","chapter2-templates/tests/app.jshint.js","chapter2-templates/tests/controllers/application.jshint.js","chapter2-templates/tests/helpers/resolver.js","chapter2-templates/tests/helpers/resolver.jshint.js","chapter2-templates/tests/helpers/start-app.js","chapter2-templates/tests/helpers/start-app.jshint.js","chapter2-templates/tests/models/handlbars-conditions-exp-model.jshint.js","chapter2-templates/tests/router.jshint.js","chapter2-templates/tests/routes/application.jshint.js","chapter2-templates/tests/routes/handlebars-conditions-exp-route.jshint.js","chapter2-templates/tests/routes/test.jshint.js","chapter2-templates/tests/test-helper.js","chapter2-templates/tests/test-helper.jshint.js","chapter2-templates/tests/unit/controllers/application-test.js","chapter2-templates/tests/unit/controllers/application-test.jshint.js","chapter2-templates/tests/unit/controllers/handlbars-conditions-exp-test.js","chapter2-templates/tests/unit/controllers/handlbars-conditions-exp-test.jshint.js","chapter2-templates/tests/unit/controllers/test-test.js","chapter2-templates/tests/unit/controllers/test-test.jshint.js","chapter2-templates/tests/unit/models/handlbars-conditions-exp-model-test.js","chapter2-templates/tests/unit/models/handlbars-conditions-exp-model-test.jshint.js","chapter2-templates/tests/unit/routes/handlbars-conditions-exp-route-test.js","chapter2-templates/tests/unit/routes/handlbars-conditions-exp-route-test.jshint.js","chapter2-templates/tests/unit/routes/hello-world-test.js","chapter2-templates/tests/unit/routes/hello-world-test.jshint.js","chapter2-templates/tests/unit/routes/test-route-naming-test.js","chapter2-templates/tests/unit/routes/test-route-naming-test.jshint.js","chapter2-templates/tests/unit/routes/test-test.js","chapter2-templates/tests/unit/routes/test-test.jshint.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["\"use strict\";\n/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('chapter2-templates/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'chapter2-templates/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  var App;\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('chapter2-templates/components/app-version', ['exports', 'ember-cli-app-version/components/app-version', 'chapter2-templates/config/environment'], function (exports, AppVersionComponent, config) {\n\n  'use strict';\n\n  var _config$APP = config['default'].APP;\n  var name = _config$APP.name;\n  var version = _config$APP.version;\n\n  exports['default'] = AppVersionComponent['default'].extend({\n    version: version,\n    name: name\n  });\n\n});","define('chapter2-templates/controllers/application', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\t// app/controllers/application.js\n\n\texports['default'] = Ember['default'].Controller.extend({\n\t\t//  设置属性\n\t\tfirstName: 'chen',\n\t\tlastName: 'ubuntuvim',\n\t\temail: 'chendequanroob@gmail.com'\n\t});\n\n});","define('chapter2-templates/controllers/array', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller;\n\n});","define('chapter2-templates/controllers/object', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller;\n\n});","define('chapter2-templates/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'chapter2-templates/config/environment'], function (exports, initializerFactory, config) {\n\n  'use strict';\n\n  var _config$APP = config['default'].APP;\n  var name = _config$APP.name;\n  var version = _config$APP.version;\n\n  exports['default'] = {\n    name: 'App Version',\n    initialize: initializerFactory['default'](name, version)\n  };\n\n});","define('chapter2-templates/initializers/export-application-global', ['exports', 'ember', 'chapter2-templates/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (config['default'].exportApplicationGlobal !== false) {\n      var value = config['default'].exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = Ember['default'].String.classify(config['default'].modulePrefix);\n      }\n\n      if (!window[globalName]) {\n        window[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete window[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  ;\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n\n});","define('chapter2-templates/models/handlbars-conditions-exp-model', function () {\n\n\t'use strict';\n\n\t// import DS from 'ember-data';\n\n\t// export default DS.Model.extend({\n\t// \tname: DS.attr('string'), \n\t// \tage: DS.attr('number')\n\t// });\n\n});","define('chapter2-templates/router', ['exports', 'ember', 'chapter2-templates/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType\n  });\n\n  Router.map(function () {\n    this.route('handlebarsConditionsExpRoute');\n  });\n\n  exports['default'] = Router;\n\n});","define('chapter2-templates/routes/application', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({\n\t\t// redirect: function() {\n\t\t// \tthis.transitionTo('test');\n\t\t// }\n\t});\n\n});","define('chapter2-templates/routes/handlebars-conditions-exp-route', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\t//  app/routes/handlebars-condition-exp-route.js\n\n\texports['default'] = Ember['default'].Route.extend({\n\n\t\tmodel: function model() {\n\t\t\treturn { name: 'i2cao.xyz', age: 25, isAtWork: false, isReading: false };\n\t\t\t// return { enable: true };\n\t\t}\n\t});\n\n});","define('chapter2-templates/routes/test', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('chapter2-templates/templates/application_base', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 15,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"chapter2-templates/templates/application_base.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\" app/templates/application.hbs \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\" 这个是默认的模板，Ember会根据命名的规则自动找到 controllers/application 对应的模板是templates/application.hbs \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h2\");\n        dom.setAttribute(el1,\"id\",\"title\");\n        var el2 = dom.createTextNode(\"Welcome to Ember\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\" Ember的属性自动更新：如果属性在controller层改变了，页面会自动刷新显示最新的值，太强大了！！！ \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\nHello, \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"strong\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"!\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\nMy email is \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"b\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [8]);\n        var morphs = new Array(3);\n        morphs[0] = dom.createMorphAt(element0,0,0);\n        morphs[1] = dom.createMorphAt(element0,2,2);\n        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [12]),0,0);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"firstName\",[\"loc\",[null,[10,15],[10,28]]]],\n        [\"content\",\"lastName\",[\"loc\",[null,[10,29],[10,41]]]],\n        [\"content\",\"email\",[\"loc\",[null,[12,15],[12,24]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('chapter2-templates/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 22,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"chapter2-templates/templates/application.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\" app/templates/application.hbs \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"container-fluid\");\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\\n<header>\\n\t<h1>ubuntuvim's Blog</h1>\\n</header>\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        var el3 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\" 所有的模板都会渲染到这里 \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"footer\");\n        dom.setAttribute(el2,\"class\",\"footer\");\n        var el3 = dom.createTextNode(\"\\n\t©2015 ubuntuvim's Publishing,Inc\\n\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [2, 3]),3,3);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"outlet\",[\"loc\",[null,[13,1],[13,11]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('chapter2-templates/templates/handlebars-conditions-exp-route', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 4,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 6,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"chapter2-templates/templates/handlebars-conditions-exp-route.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"Welcome back, \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"b\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" !\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n          return morphs;\n        },\n        statements: [\n          [\"content\",\"model.name\",[\"loc\",[null,[5,17],[5,31]]]]\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 11,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 13,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"chapter2-templates/templates/handlebars-conditions-exp-route.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"Ship that code..\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"br\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child2 = (function() {\n      var child0 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 13,\n                \"column\": 0\n              },\n              \"end\": {\n                \"line\": 15,\n                \"column\": 0\n              }\n            },\n            \"moduleName\": \"chapter2-templates/templates/handlebars-conditions-exp-route.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"You can finish War and Peace eventually..\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"br\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() { return []; },\n          statements: [\n\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      var child1 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 15,\n                \"column\": 0\n              },\n              \"end\": {\n                \"line\": 17,\n                \"column\": 0\n              }\n            },\n            \"moduleName\": \"chapter2-templates/templates/handlebars-conditions-exp-route.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"This is else block...\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() { return []; },\n          statements: [\n\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 13,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 17,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"chapter2-templates/templates/handlebars-conditions-exp-route.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [\n          [\"block\",\"if\",[[\"get\",\"model.isReading\",[\"loc\",[null,[13,10],[13,25]]]]],[],0,1,[\"loc\",[null,[13,0],[17,0]]]]\n        ],\n        locals: [],\n        templates: [child0, child1]\n      };\n    }());\n    var child3 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 23,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 25,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"chapter2-templates/templates/handlebars-conditions-exp-route.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"unless.....\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 31,\n            \"column\": 69\n          }\n        },\n        \"moduleName\": \"chapter2-templates/templates/handlebars-conditions-exp-route.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\" app/templates/handlebars-conditions-exp-route.hbs \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\" if判断标签，当熟悉model的值不为 false, undefined, null or [] 的时候显示标签内的内容 \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\" if……else……判断 \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\" 非判断 \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\" 可以把表达式直接嵌入在某个标签中，当enable的值为true则结果是增加了一个类(css的类)enable，否则增加'disable' \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"span\");\n        var el2 = dom.createTextNode(\"enable or disable\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [25]);\n        var morphs = new Array(4);\n        morphs[0] = dom.createMorphAt(fragment,4,4,contextualElement);\n        morphs[1] = dom.createMorphAt(fragment,11,11,contextualElement);\n        morphs[2] = dom.createMorphAt(fragment,18,18,contextualElement);\n        morphs[3] = dom.createAttrMorph(element0, 'class');\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"if\",[[\"get\",\"model\",[\"loc\",[null,[4,6],[4,11]]]]],[],0,null,[\"loc\",[null,[4,0],[6,7]]]],\n        [\"block\",\"if\",[[\"get\",\"model.isAtWork\",[\"loc\",[null,[11,6],[11,20]]]]],[],1,2,[\"loc\",[null,[11,0],[17,7]]]],\n        [\"block\",\"unless\",[[\"get\",\"model.isReading\",[\"loc\",[null,[23,10],[23,25]]]]],[],3,null,[\"loc\",[null,[23,0],[25,11]]]],\n        [\"attribute\",\"class\",[\"subexpr\",\"if\",[[\"get\",\"enable\",[\"loc\",[null,[31,17],[31,23]]]],\"enable\",\"disable\"],[],[\"loc\",[null,[31,12],[31,44]]]]]\n      ],\n      locals: [],\n      templates: [child0, child1, child2, child3]\n    };\n  }()));\n\n});","define('chapter2-templates/tests/app.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('app.js should pass jshint', function(assert) { \n    assert.ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('chapter2-templates/tests/controllers/application.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/application.js should pass jshint', function(assert) { \n    assert.ok(true, 'controllers/application.js should pass jshint.'); \n  });\n\n});","define('chapter2-templates/tests/helpers/resolver', ['exports', 'ember/resolver', 'chapter2-templates/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('chapter2-templates/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/resolver.js should pass jshint', function(assert) { \n    assert.ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('chapter2-templates/tests/helpers/start-app', ['exports', 'ember', 'chapter2-templates/app', 'chapter2-templates/config/environment'], function (exports, Ember, Application, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('chapter2-templates/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/start-app.js should pass jshint', function(assert) { \n    assert.ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('chapter2-templates/tests/models/handlbars-conditions-exp-model.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - models');\n  QUnit.test('models/handlbars-conditions-exp-model.js should pass jshint', function(assert) { \n    assert.ok(true, 'models/handlbars-conditions-exp-model.js should pass jshint.'); \n  });\n\n});","define('chapter2-templates/tests/router.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('router.js should pass jshint', function(assert) { \n    assert.ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('chapter2-templates/tests/routes/application.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/application.js should pass jshint', function(assert) { \n    assert.ok(true, 'routes/application.js should pass jshint.'); \n  });\n\n});","define('chapter2-templates/tests/routes/handlebars-conditions-exp-route.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/handlebars-conditions-exp-route.js should pass jshint', function(assert) { \n    assert.ok(true, 'routes/handlebars-conditions-exp-route.js should pass jshint.'); \n  });\n\n});","define('chapter2-templates/tests/routes/test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/test.js should pass jshint', function(assert) { \n    assert.ok(true, 'routes/test.js should pass jshint.'); \n  });\n\n});","define('chapter2-templates/tests/test-helper', ['chapter2-templates/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('chapter2-templates/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('test-helper.js should pass jshint', function(assert) { \n    assert.ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('chapter2-templates/tests/unit/controllers/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:application', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('chapter2-templates/tests/unit/controllers/application-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers');\n  QUnit.test('unit/controllers/application-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/controllers/application-test.js should pass jshint.'); \n  });\n\n});","define('chapter2-templates/tests/unit/controllers/handlbars-conditions-exp-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:handlbars-conditions-exp', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('chapter2-templates/tests/unit/controllers/handlbars-conditions-exp-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers');\n  QUnit.test('unit/controllers/handlbars-conditions-exp-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/controllers/handlbars-conditions-exp-test.js should pass jshint.'); \n  });\n\n});","define('chapter2-templates/tests/unit/controllers/test-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:test', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('chapter2-templates/tests/unit/controllers/test-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers');\n  QUnit.test('unit/controllers/test-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/controllers/test-test.js should pass jshint.'); \n  });\n\n});","define('chapter2-templates/tests/unit/models/handlbars-conditions-exp-model-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('handlbars-conditions-exp-model', 'Unit | Model | handlbars conditions exp model', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('chapter2-templates/tests/unit/models/handlbars-conditions-exp-model-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/models');\n  QUnit.test('unit/models/handlbars-conditions-exp-model-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/models/handlbars-conditions-exp-model-test.js should pass jshint.'); \n  });\n\n});","define('chapter2-templates/tests/unit/routes/handlbars-conditions-exp-route-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:handlbars-conditions-exp-route', 'Unit | Route | handlbars conditions exp route', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('chapter2-templates/tests/unit/routes/handlbars-conditions-exp-route-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes');\n  QUnit.test('unit/routes/handlbars-conditions-exp-route-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/routes/handlbars-conditions-exp-route-test.js should pass jshint.'); \n  });\n\n});","define('chapter2-templates/tests/unit/routes/hello-world-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:hello-world', 'Unit | Route | hello world', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('chapter2-templates/tests/unit/routes/hello-world-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes');\n  QUnit.test('unit/routes/hello-world-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/routes/hello-world-test.js should pass jshint.'); \n  });\n\n});","define('chapter2-templates/tests/unit/routes/test-route-naming-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:test-route-naming', 'Unit | Route | test route naming', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('chapter2-templates/tests/unit/routes/test-route-naming-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes');\n  QUnit.test('unit/routes/test-route-naming-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/routes/test-route-naming-test.js should pass jshint.'); \n  });\n\n});","define('chapter2-templates/tests/unit/routes/test-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:test', 'Unit | Route | test', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('chapter2-templates/tests/unit/routes/test-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes');\n  QUnit.test('unit/routes/test-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/routes/test-test.js should pass jshint.'); \n  });\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('chapter2-templates/config/environment', ['ember'], function(Ember) {\n  var prefix = 'chapter2-templates';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"chapter2-templates/tests/test-helper\");\n} else {\n  require(\"chapter2-templates/app\")[\"default\"].create({\"name\":\"chapter2-templates\",\"version\":\"0.0.0+6dc7d2b2\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpzUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"chapter2-templates.js"}